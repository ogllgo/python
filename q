[4mFIGLET[24m(6)                                                                                                            Games Manual                                                                                                           [4mFIGLET[24m(6)

[1mNAME[0m
       FIGlet - display large characters made up of ordinary screen characters

[1mSYNOPSIS[0m
       [1mfiglet [22m[ [1m-cklnoprstvxDELNRSWX [22m] [ [1m-d [4m[22mfontdirectory[24m ]
              [ [1m-f [4m[22mfontfile[24m ] [ [1m-m [4m[22mlayoutmode[24m ]
              [ [1m-w [4m[22moutputwidth[24m ] [ [1m-C [4m[22mcontrolfile[24m ]
              [ [1m-I [4m[22minfocode[24m ] [ [4mmessage[24m ]

[1mDESCRIPTION[0m
       [1mFIGlet  [22mprints  its input using large characters (called ``FIGcharacters'')made up of ordinary screen characters (called ``sub-characters'').  [1mFIGlet [22moutput is generally reminiscent of the sort of ``signatures'' many people like to put at
       the end of e-mail and UseNet messages.  It is also reminiscent of the output of some banner programs, although it is oriented normally, not sideways.

       [1mFIGlet [22mcan print in a variety of fonts, both left-to-right and right-to-left, with adjacent FIGcharacters kerned and ``smushed'' together in various ways.  [1mFIGlet [22mfonts are stored in separate files, which can be identified by  the  suffix
       ``[1m.flf[22m''.  In systems with UTF-8 support [1mFIGlet [22mmay also support TOIlet ``[1m.tlf[22m'' fonts.  Most [1mFIGlet [22mfont files will be stored in [1mFIGlet's [22mdefault font directory.

       [1mFIGlet  [22mcan also use ``control files'', which tell it to map certain input characters to certain other characters, similar to the Unix [1mtr [22mcommand.  Control files can be identified by the suffix ``[1m.flc[22m''.  Most [1mFIGlet [22mcontrol files will be
       stored in [1mFIGlet's [22mdefault font directory.

       You can store [1mFIGlet [22mfonts and control files in compressed form.  See [1mCOMPRESSED FONTS[22m.

[1mUSAGE[0m
       Just start up [1mFIGlet [22m(type ``[1mfiglet[22m'') and then type whatever you want.  Alternatively, pipe a file or the output of another command through [1mFIGlet[22m, or put input on the command line after the options.  See [1mEXAMPLES [22mfor other things to do.

[1mOPTIONS[0m
       [1mFIGlet [22mreads command line options from left to right, and only the last option that affects a parameter has any effect.  Almost every option has an inverse, so that, for example, if [1mFIGlet [22mis customized with a shell [1malias[22m, all the options
       are usually still available.

       Commonly-used options are [1m-f[22m, [1m-c[22m, [1m-k[22m, [1m-t[22m, [1m-p [22mand [1m-v[22m.

       [1m-f [4m[22mfontfile[0m
              Select the font.  The [1m.flf [22msuffix may be left off of [4mfontfile[24m, in which case [1mFIGlet [22mautomatically appends it.  [1mFIGlet [22mlooks for the file first in the default font directory and then in the current directory,  or,  if  [4mfontfile[24m  was
              given as a full pathname, in the given directory.  If the [1m-f [22moption is not specified, [1mFIGlet [22muses the font that was specified when it was compiled.  To find out which font this is, use the [1m-I3 [22moption.

       [1m-d [4m[22mfontdirectory[0m
              Change the default font directory.  [1mFIGlet [22mlooks for fonts first in the default directory and then in the current directory.  If the [1m-d [22moption is not specified, [1mFIGlet [22muses the directory that was specified when it was compiled.  To
              find out which directory this is, use the [1m-I2 [22moption.

       [1m-c[0m
       [1m-l[0m
       [1m-r[0m
       [1m-x     [22mThese  options  handle  the  justification of [1mFIGlet [22moutput.  [1m-c [22mcenters the output horizontally.  [1m-l [22mmakes the output flush-left.  [1m-r [22mmakes it flush-right.  [1m-x [22m(default) sets the justification according to whether left-to-right or
              right-to-left text is selected.  Left-to-right text will be flush-left, while right-to-left text will be flush-right.  (Left-to-right versus right-to-left text is controlled by [1m-L[22m, [1m-R [22mand [1m-X[22m.)

       [1m-t[0m
       [1m-w [4m[22moutputwidth[0m
              These options control the [4moutputwidth[24m, or the screen width [1mFIGlet [22massumes when formatting its output.  [1mFIGlet [22muses the [4moutputwidth[24m to determine when to break lines and how to center the output.  Normally, [1mFIGlet [22massumes 80  columns
              so that people with wide terminals won't annoy the people they e-mail [1mFIGlet [22moutput to.  [1m-t [22msets the [4moutputwidth[24m to the terminal width.  If the terminal width cannot be determined, the previous [4moutputwidth[24m is retained.  [1m-w [22msets the
              [4moutputwidth[24m to the given integer.  An [4moutputwidth[24m of 1 is a special value that tells [1mFIGlet [22mto print each non-space FIGcharacter, in its entirety, on a separate line, no matter how wide it is.

       [1m-p[0m
       [1m-n     [22mThese  options  control how [1mFIGlet [22mhandles newlines.  [1m-p [22mputs [1mFIGlet [22minto ``paragraph mode'', which eliminates some unnecessary line breaks when piping a multi-line file through [1mFIGlet[22m.  In paragraph mode, [1mFIGlet [22mtreats line breaks
              within a paragraph as if they were merely blanks between words.  (Specifically, [1m-p [22mcauses [1mFIGlet [22mto convert any newline which is not preceded by a newline and not followed by a space character into  a  blank.)   [1m-n  [22m(default)  puts
              [1mFIGlet [22mback to normal, in which every newline [1mFIGlet [22mreads causes it to produce a line break.

       [1m-D[0m
       [1m-E     -D  [22mswitches  to  the German (ISO 646-DE) character set.  Turns `[', `\' and `]' into umlauted A, O and U, respectively.  `{', `|' and `}' turn into the respective lower case versions of these.  `~' turns into s-z.  [1m-E [22mturns off [1m-D[0m
              processing.  These options are deprecated, which means they probably will not appear in the next version of [1mFIGlet[22m.

       [1m-C [4m[22mcontrolfile[0m
       [1m-N     [22mThese options deal with [1mFIGlet [4m[22mcontrolfiles[24m.  A [4mcontrolfile[24m is a file containing a list of commands that [1mFIGlet [22mexecutes each time it reads a character.  These commands can map certain input characters to other characters,  similar
              to  the  Unix [1mtr [22mcommand or the [1mFIGlet -D [22moption.  [1mFIGlet [22mmaintains a list of [4mcontrolfiles[24m, which is empty when [1mFIGlet [22mstarts up.  [1m-C [22madds the given [4mcontrolfile[24m to the list.  [1m-N [22mclears the [4mcontrolfile[24m list, cancelling the effect of
              any previous [1m-C[22m.  [1mFIGlet [22mexecutes the commands in all [4mcontrolfiles[24m in the list.  See the file [4mfigfont.txt[24m, provided with FIGlet, for details on how to write a [4mcontrolfile[24m.

       [1m-s[0m
       [1m-S[0m
       [1m-k[0m
       [1m-W[0m

       [1m-o     [22mThese options control how [1mFIGlet [22mspaces the FIGcharacters that it outputs.  [1m-s [22m(default) and [1m-S [22mcause ``smushing''.  The FIGcharacters are displayed as close together as possible, and overlapping sub-characters  are  removed.   Ex‚Äê
              actly which sub-characters count as ``overlapping'' depends on the font's [4mlayoutmode[24m, which is defined by the font's author.  [1m-k [22mcauses ``kerning''.  As many blanks as possible are removed between FIGcharacters, so that they touch,
              but the FIGcharacters are not smushed.  [1m-W [22mmakes [1mFIGlet [22mdisplay all FIGcharacters at their full width, which may be fixed or variable, depending on the font.

              The difference between [1m-s [22mand [1m-S [22mis that [1m-s [22mwill not smush a font whose author specified kerning or full width as the default [4mlayoutmode[24m, whereas [1m-S [22mwill attempt to do so.

              If  there is no information in the font about how to smush, or if the [1m-o [22moption is specified, then the FIGcharacters are ``overlapped''.  This means that after kerning, the first subcharacter of each FIGcharacter is removed.  (This
              is not done if a FIGcharacter contains only one subcharacter.)

       [1m-m [4m[22mlayoutmode[0m
              Specifies an explicit [4mlayoutmode[24m between [1m1 [22mand [1m63[22m.  [4mSmushmodes[24m are explained in [4mfigfont.txt[24m, which also provides complete information on the format of a [1mFIGlet [22mfont.  For the sake of backward compatibility with versions  of  [1mFIGlet[0m
              before 2.2, [1m-m0 [22mis equivalent to [1m-k[22m, [1m-m-1 [22mis equivalent to [1m-W[22m, and [1m-m-2 [22mis equivalent to [1m-s[22m.  The [1m-m [22mswitch is normally used only by font designers testing the various [4mlayoutmodes[24m with a new font.

       [1m-v[0m
       [1m-I [4m[22minfocode[0m
              These options print various information about [1mFIGlet[22m, then exit.  If several of these options are given on the command line, only the last is executed, and only after all other command-line options have been dealt with.

              [1m-v  [22mprints  version and copyright information, as well as a ``Usage: ...''  line.  [1m-I [22mprints the information corresponding to the given [4minfocode[24m in a consistent, reliable (i.e., guaranteed to be the same in future releases) format.
              [1m-I [22mis primarily intended to be used by programs that use [1mFIGlet[22m.  [4minfocode[24m can be any of the following.

              [1m-1 [22mNormal operation (default).
                     This [4minfocode[24m indicates that [1mFIGlet [22mshould operate normally, not giving any informational printout, printing its input in the selected font.

              [1m0 [22mVersion and copyright.
                     This is identical to [1m-v[22m.

              [1m1 [22mVersion (integer).
                     This will print the version of your copy of [1mFIGlet [22mas a decimal integer.  The main version number is multiplied by 10000, the sub-version number is multiplied by 100, and the sub-sub-version number is multiplied by 1.  These
                     are added together, and the result is printed out.  For example, [1mFIGlet [22m2.2 will print ``[1m20200[22m'' , version 2.2.1 will print ``[1m20201[22m''.  Similarly, version 3.7.2 would print ``[1m30702[22m''.  These numbers are guaranteed to be  as‚Äê
                     cending, with later versions having higher numbers.  Note that the first major release of [1mFIGlet[22m, version 2.0, did not have the [1m-I [22moption.

              [1m2 [22mDefault font directory.
                     This will print the default font directory.  It is affected by the [1m-d [22moption.

              [1m3 [22mFont.
                     This will print the name of the font [1mFIGlet [22mwould use.  It is affected by the [1m-f [22moption.  This is not a filename; the ``[1m.flf[22m'' suffix is not printed.

              [1m4 [22mOutput width.
                     This will print the value [1mFIGlet [22mwould use for [4moutputwidth[24m, the number of columns wide [1mFIGlet [22massumes the screen is.  It is affected by the [1m-w [22mand [1m-t [22moptions.

              [1m5 [22mSupported font formats.
                     This will list font formats supported by [1mFIGlet .  [22mPossible formats are ``[1mflf2[22m'' for FIGfont Version 2 [1m.flf [22mfiles and ``[1mtlf2[22m'' for TOIlet [1m.tlf [22mfiles.

              If [4minfocode[24m is any other positive value, [1mFIGlet [22mwill simply exit without printing anything.

       [1m-L[0m
       [1m-R[0m
       [1m-X     [22mThese options control whether [1mFIGlet [22mprints left-to-right or right-to-left.  [1m-L [22mselects left-to-right printing.  [1m-R [22mselects right-to-left printing.  [1m-X [22m(default) makes [1mFIGlet [22muse whichever is specified in the font file.

              Once the options are read, if there are any remaining words on the command line, they are used instead of standard input as the source of text.  This feature allows shell scripts to generate large letters without having to dummy up
              standard input files.

              An empty argument, obtained by two sequential quotes, results in a line break.

[1mEXAMPLES[0m
       To use [1mFIGlet [22mwith its default settings, simply type

              [1mexample% figlet[0m

       and then type whatever you like.

       To change the font, use the [1m-f [22moption, for example,

              [1mexample% figlet -f script[0m

       Use the [1m-c [22moption if you would prefer centered output:

              [1mexample% figlet -c[0m

       We  have  found  that  the most common use of [1mFIGlet [22mis making up large text to be placed in e-mail messages.  For this reason, [1mFIGlet [22mdefaults to 80 column output.  If you are using a wider terminal, and would like [1mFIGlet [22mto use the full
       width of your terminal, use the [1m-t [22moption:

              [1mexample% figlet -t[0m

       If you don't want [1mFIGlet [22mto smush FIGcharacters into each other, use the [1m-k [22moption:

              [1mexample% figlet -k[0m

       If [1mfiglet [22mgets its input from a file, it is often a good idea to use [1m-p[22m:

              [1mexample% figlet -p < myfile[0m

       Of course, the above can be combined:

              [1mexample% figlet -ptk -f shadow < anotherfile[0m
              [1mexample% figlet -cf slant[0m

       Finally, if you want to have [1mFIGlet [22mtake the input from the command line instead of a file:

              [1mexample% figlet Hello world[0m

   [1mOther Things to Try[0m
       On many systems nice effects can be obtained from the [1mlean [22mfont by piping it through [1mtr[22m.  Some you might want to try are the following:

              [1mexample% figlet -f lean | tr ' _/' ' ()'[0m
              [1mexample% figlet -f lean | tr ' _/' './\\'[0m
              [1mexample% figlet -f lean | tr ' _/' ' //'[0m
              [1mexample% figlet -f lean | tr ' _/' '/  '[0m

       Similar things can be done with the [1mblock [22mfont and many of the other [1mFIGlet [22mfonts.

[1mCOMPRESSED FONTS[0m
       You can compress the fonts and controlfiles using the [1mzip [22marchiving program.  Place only one font or controlfile in each archive, and rename the archive file (which will have a name ending in [1m.zip[22m) back to [1m.flf [22mor [1m.flc [22mas the case may be.
       If you don't rename the file appropriately, [1mFIGlet [22mwon't be able to find it.

       [1mFIGlet [22mdoes not care what the filename within the [1m.zip [22marchive is, and will process only the first file.

       The [1m.zip [22mformat was chosen because tools to create and manipulate it are widely available for free on many platforms.

[1mTHE STANDARD FONTS[0m
       Here are a few notes about some of the fonts provided with [4mFIGlet[24m.  You can get many other font from the Web site
       http://www.figlet.org/   This location should also contain the latest version of [1mFIGlet [22mand other related utilities.

       The font [4mstandard[24m is the basic [1mFIGlet [22mfont, used when no other font is specified.  (This default can be changed when [1mFIGlet [22mis compiled on your system.)  The [4mcontrolfiles[24m [4m8859-2[24m, [4m8859-3[24m, [4m8859-4[24m, and [4m8859-9[24m are  provided  for  interpreting
       those character sets, also known as ISO Latin-2 through Latin-5 respectively.  The character set 8859-1 (ISO Latin-1) is [1mFIGlet's [22mdefault and requires no special [4mcontrolfile[24m.

       Closely  related are the fonts [4mslant[24m, [4mshadow[24m, [4msmall[24m, [4msmslant[24m (both small and slanted), [4msmshadow[24m, (both small and shadowed), and [4mbig[24m.  These fonts support only Latin-1, except that [4mbig[24m supports Greek FIGcharacters as well; the [4mcontrolfiles[0m
       [4mfrango[24m (for Greek text written in Latin characters, so-called ``[4mfrangovlakhika[24m''), and [4m8859-7[24m (for mixed Latin/Greek text) are provided.

       The [4mivrit[24m font is a right-to-left font including both Latin and Hebrew FIGcharacters; the Latin characters are those of the [4mstandard[24m font.  The available [4mcontrolfiles[24m are [4milhebrew[24m, which maps the letters you get by typing on a  U.S.  key‚Äê
       board  as  if  it were a Hebrew keyboard; [4mushebrew[24m, which makes a reasonable mapping from Latin letters to Hebrew ones; and [4m8859-8[24m, which supports mixed Latin/Hebrew text.  [1mWarning: FIGlet [22mdoesn't support bidirectional text, so everything
       will come out right-to-left, even Latin letters.

       The fonts [4mterminal[24m, [4mdigital[24m, and [4mbubble[24m output the input character with some decoration around it (or no decoration, in the case of [4mterminal[24m).  The characters coded 128 to 159, which have varying interpretations, are  output  as-is.   You
       can use the appropriate [4mcontrolfiles[24m to process Latin-2, Latin-3, or Latin-4 (but not Latin-5) text, provided your output device has screen or printer fonts that are appropriate for these character sets.

       Two script fonts are available: [4mscript[24m, which is larger than [4mstandard[24m, and [4msmscript[24m, which is smaller.

       The font [4mlean[24m is made up solely of `/' and `_' sub-characters; [4mblock[24m is a straight (non-leaning) version of it.

       The font [4mmini[24m is very small, and especially suitable for e-mail signatures.

       The  font  [4mbanner[24m  looks  like the output of the [1mbanner [22mprogram; it is a capitals and small capitals font that doesn't support the ISO Latin-1 extensions to plain ASCII.  It does, however, support the Japanese [4mkatakana[24m syllabary; the [4mcon‚Äê[0m
       [4mtrolfile[24m [4muskata[24m maps the upper-case and lower-case Latin letters into the 48 basic [4mkatakana[24m characters, and the [4mcontrolfile[24m [4mjis0201[24m handles JIS 0201X (JIS-Roman) mixed Latin and [4mkatakana[24m text.  Furthermore, the [4mbanner[24m font  also  supports
       Cyrillic (Russian) FIGcharacters; the [4mcontrolfile[24m [4m8859-5[24m supports mixed Latin and Cyrillic text, the [4mcontrolfile[24m [4mkoi8r[24m supports the popular KOI8-R mapping of mixed text, and the [4mcontrolfile[24m [4mmoscow[24m supports a sensible mapping from Latin to
       Cyrillic, compatible with the [4mmoscow[24m font (not supplied).

       The  fonts  [4mmnemonic[24m  and  [4msafemnem[24m support the mnemonic character set documented in RFC 1345.  They implement a large subset of Unicode (over 1800 characters) very crudely, using ASCII-based mnemonic sequences, and are good for getting a
       quick look at UTF-8 unicode files, using the controlfile [4mutf8[24m.

[1mENVIRONMENT[0m
       [1mFIGLET_FONTDIR[0m
              If $[1mFIGLET_FONTDIR [22mis set, its value is used as a path to search for font files.

[1mFILES[0m
       [4mfile[24m[1m.flf            FIGlet [22mfont file
       [4mfile[24m[1m.flc            FIGlet [22mcontrol file

[1mDIAGNOSTICS[0m
       [1mFIGlet's [22mdiagnostics are intended to be self-explanatory.  Possible messages are

              [1mUsage: ...[0m
              [1mOut of memory[0m
              [1mUnable to open font file[0m
              [1mNot a FIGlet 2 font file[0m
              [1mUnable to open control file[0m
              [1mNot a FIGlet 2 control file[0m
              [1m"-t" is disabled, since ioctl is not fully implemented.[0m

       This last message is printed when the [1m-t [22moption is given, but the operating system in use does not include the system call [1mFIGlet [22muses to determine the terminal width.

       [1mFIGlet [22malso prints an explanatory message if the [1m-F [22moption is given on the command line.  The earlier version of [1mFIGlet[22m, version 2.0, listed the available fonts when the [1m-F [22moption was given.  This option has been removed from [1mFIGlet  [22m2.1.
       It has been replaced by the [1mfiglist [22mscript, which is part of the standard [1mFIGlet [22mpackage.

[1mORIGIN[0m
       ``[1mFIGlet[22m'' stands for ``Frank, Ian and Glenn's LETters''.  Inspired by Frank's .sig, Glenn wrote (most of) it, and Ian helped.

       Most  of  the standard [1mFIGlet [22mfonts were inspired by signatures on various UseNet articles.  Since typically hundreds of people use the same style of letters in their signatures, it was often not deemed necessary to give credit to any one
       font designer.

[1mBUGS[0m
       Very little error checking is done on font and control files.  While [1mFIGlet [22mtries to be forgiving of errors, and should (hopefully) never actually crash, using an improperly-formatted file with [1mFIGlet [22mwill produce unpredictable output.

       [1mFIGlet [22mdoes not handle format characters in a very intelligent way.  A tab character is converted to a blank, and vertical-tab, form-feed and carriage-return are each converted to a newline.  On many systems, tabs can be handled better by
       piping files through [1mexpand [22mbefore piping through [1mFIGlet[22m.

       [1mFIGlet [22moutput is quite ugly if it is displayed in a proportionally-spaced font.  I suppose this is to be expected.

       Please report any errors you find in this man page or the program to <info@figlet.org>

[1mWEBSITE AND MAILING LIST[0m
       You can get many fonts which are not in the basic [1mFIGlet [22mpackage from the Web site http://www.figlet.org/   It should also contain the latest version of [1mFIGlet [22mand other utilities related to [1mFIGlet[22m.

       There is a mailing list for [1mFIGlet [22mfor general discussions about [1mFIGlet [22mand a place where you can ask questions or share ideas with other [1mFIGlet [22musers. It is also the place where we will publish news about new fonts, new software  updates
       etc.

       To subscribe or unsubscribe from the [1mFIGlet [22mmailing list, please send email to figlet-subscribe@figlet.org or figlet-unsubscribe@figlet.org or visit the following web page: http://www.figlet.org/mailman/listinfo/figlet

[1mAUTHORS[0m
       Glenn Chappell did most of the work.  You can e-mail him but he is not an e-mail fanatic; people who e-mail Glenn will probably get answers, but if you e-mail his best friend:

       Ian Chai, who [4mis[24m an e-mail fanatic, you'll get answers, endless conversation about the mysteries of life, invitations to join some 473 mailing lists and a free toaster.  (Well, ok, maybe not the free toaster.)

       Frank inspired this whole project with his .sig, but don't e-mail him; he's decidedly an un-e-mail-fanatic.

       Gilbert "The Mad Programmer" Healton added the [1m-A [22moption for version 2.1.1.  This option specified input from the command line; it is still allowed, but has no effect.

       John Cowan added the [1m-o[22m, [1m-s[22m, [1m-k[22m, [1m-S[22m, and [1m-W [22moptions, and the support for Unicode mapping tables, ISO 2022/HZ/Shift-JIS/UTF-8 input, and compressed fonts and control files.  He also revised this documentation, with a lot of input from Paul
       Burton.

       Claudio Matsuoka added the support for [1m.tlf [22mfiles for version 2.2.4 and performs random hacks and bugfixes.

       As a fan of FIGlet, Christiaan Keet revised the official FIGlet documentation and set up the new FIGlet website at http://www.figlet.org/ (and the corresponding ftp://ftp.figlet.org/pub/figlet/)

[1mSEE ALSO[0m
       [1mfiglist[22m(6), [1mchkfont[22m(6), [1mshowfigfonts[22m(6), [1mtoilet[22m(1)

v2.2.5                                                                                                               31 May 2012                                                                                                            [4mFIGLET[24m(6)
